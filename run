#!/usr/bin/env bash

set -e

# CLI handling.
arch=x86_64
debug_qemu=''
kgdb=false
nographic=false
# norandmaps: Don't use address space randomization. Equivalent to echo 0 > /proc/sys/kernel/randomize_va_space.
# printk.time=y: log in format: "[time ] msg" for all printk messages.
# nokaslr: https://unix.stackexchange.com/questions/397939/turning-off-kaslr-to-debug-linux-kernel-using-qemu-and-gdb
#   Turned on by default since v4.12
extra_append='nokaslr norandmaps printk.devkmsg=on printk.time=y'
extra_flags=''
while getopts a:de:knqt:x OPT; do
  case "$OPT" in
    a)
      arch="$OPTARG"
      ;;
    d)
      extra_flags="$extra_flags -S -s"
      ;;
    e)
      extra_append="$extra_append $OPTARG"
      ;;
    k)
      extra_append="$extra_append kgdbwait"
      # For those who want to try KDB.
      #extra_append="$extra_append kgdbwait kgdboc=kbd"
      extra_flags="$extra_flags -serial tcp::1234,server,nowait"
      kgdb=true
      ;;
    n)
      extra_append="$extra_append console=ttyS0"
      extra_flags="$extra_flags -nographic"
      nographic=true
      ;;
    q)
      debug_qemu='gdb -q -ex start --args'
      ;;
  esac
done
shift "$(($OPTIND - 1))"
extra_flags="$extra_flags $@"

buildroot_out_dir="./buildroot/output.${arch}~"
images_dir="$buildroot_out_dir/images"
qemu_common="\
$debug_qemu \
$buildroot_out_dir/host/usr/bin/qemu-system-${arch} \
-m 128M \
-monitor telnet::45454,server,nowait \
-netdev user,hostfwd=tcp::45455-:45455,id=net0 \
-smp 1 \
"
# The base QEMU commands are found under board/qemu/*/readme.tx
case "$arch" in
  x86_64)
    if $kgdb; then
      extra_append="$extra_append kgdboc=ttyS0,115200"
    fi
    cmd="$qemu_common \
-M pc \
-append 'root=/dev/vda nopat $extra_append' \
-device edu \
-device lkmc_pci_min \
-device virtio-net-pci,netdev=net0 \
-drive file=${images_dir}/rootfs.ext2,if=virtio,format=raw \
-kernel ${images_dir}/bzImage \
$extra_flags \
"
  ;;
  arm)
    if $kgdb; then
      extra_append="$extra_append kgdboc=ttyAMA0,115200"
    fi
    cmd="$qemu_common \
-M versatilepb \
-append 'root=/dev/sda $extra_append' \
-device rtl8139,netdev=net0 \
-drive file=${images_dir}/rootfs.ext2,if=scsi,format=raw \
-dtb ${images_dir}/versatile-pb.dtb \
-kernel ${images_dir}/zImage \
-serial stdio \
$extra_flags \
"
  ;;
  aarch64)
    if $kgdb; then
      extra_append="$extra_append kgdboc=ttyAMA0,115200"
    fi
    cmd="$qemu_common \
-M virt \
-append 'root=/dev/sda $extra_append' \
-cpu cortex-a57 \
-device virtio-net-device,netdev=net0 \
-drive file=${images_dir}/rootfs.cpio,if=scsi,format=raw \
-kernel ${images_dir}/Image \
-nographic \
-serial stdio \
$extra_flags \
"
  ;;
  mips64)
    cmd="$qemu_common \
-M malta \
-append 'root=/dev/hda $extra_append' \
-cpu I6400 \
-device pcnet \
-drive file=${images_dir}/rootfs.ext2,format=raw \
-kernel ${images_dir}/vmlinux \
-nographic \
$extra_flags \
"
  ;;
esac
echo "$cmd"
eval "$cmd"
